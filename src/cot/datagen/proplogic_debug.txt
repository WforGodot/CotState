=== i_initial ===
You are given a small propositional logic system.
Initially: P is False.
Rules:
- X = P.
- N = (not P) AND (X).
- U = (not N) AND (not P).
Question: What is the truth value of U? Answer 'True' or 'False'.
Gold answer: True
Declared categories:
  initial:        ['P']
  useful(used):   ['N', 'X']
  useless(unused):[]
  indeterminate:  []
  output_var:     U
Observed minimal support path to output:
  minimal_support:['N', 'P', 'U', 'X']

COT (gold):
I will reason forward from the initial facts until everything relevant is settled.
At the start, P is || false.
Right away, P is false.
Given that P is false, and because X matches P, it follows that X is false.
Given that X is false, and because N is true only when both not P and X are true, it follows that N is false.
Given that N is false, and P is false, and because U is true only when both not N and not P are true, it follows that U is true.
In the end, U is true.
(P becomes determinate at char index 102, value=False)

=== ii_inconsequential ===
You are given a small propositional logic system.
Initially: C is False; P is True; X is True.
Rules:
- I = (P) OR (not C).
- Z = (O) AND (X).
- Y = C.
- O = not I.
Question: What is the truth value of Z? Answer 'True' or 'False'.
Gold answer: False
Declared categories:
  initial:        ['C', 'P', 'X']
  useful(used):   ['I', 'O']
  useless(unused):['Y']
  indeterminate:  ['Q', 'W']
  output_var:     Z
Observed minimal support path to output:
  minimal_support:['C', 'I', 'O', 'Z']

COT (gold):
I will reason forward from the initial facts until everything relevant is settled.
At the start, C is false, P is || true, X is true.
Right away, P is true.
Given that C is false, and because I is true when at least one of P or not C is true, it follows that I is true.
Given that C is false, and because Y matches C, it follows that Y is false.
Given that I is true, and because O matches not I, it follows that O is false.
Given that O is false, and because Z is true only when both O and X are true, it follows that Z is false.
In the end, Z is false.
(P becomes determinate at char index 114, value=True)

=== iii_derived ===
You are given a small propositional logic system.
Initially: D is True; V is False; W is False.
Rules:
- Y = not W.
- C = V.
- P = (C) AND (not W).
- X = (D) AND (not P).
Question: What is the truth value of X? Answer 'True' or 'False'.
Gold answer: True
Declared categories:
  initial:        ['D', 'V', 'W']
  useful(used):   ['C', 'P']
  useless(unused):['Y']
  indeterminate:  ['M']
  output_var:     X
Observed minimal support path to output:
  minimal_support:['C', 'D', 'P', 'V', 'X']

COT (gold):
I will reason forward from the initial facts until everything relevant is settled.
At the start, D is true, V is false, W is false.
Given that W is false, and because Y matches not W, it follows that Y is true.
Given that V is false, and because C matches V, it follows that C is false.
Given that C is false, and because P is true only when both C and not W are true, it follows that P is || false.
Given that D is true, and P is false, and because X is true only when both D and not P are true, it follows that X is true.
In the end, X is true.
(P becomes determinate at char index 390, value=False)

=== iv_indeterminate ===
You are given a small propositional logic system.
Initially: G is False; I is False; K is False.
Rules:
- O = (not G) AND (V).
- V = K.
- H = not V.
- Y = (not G) AND (not O).
- S = not V.
Question: What is the truth value of Y? Answer 'True' or 'False'.
Gold answer: True
Declared categories:
  initial:        ['G', 'I', 'K']
  useful(used):   ['O', 'V']
  useless(unused):['H', 'S']
  indeterminate:  ['N', 'P']
  output_var:     Y
Observed minimal support path to output:
  minimal_support:['G', 'K', 'O', 'V', 'Y']

COT (gold):
I will reason forward from the initial facts until everything relevant is settled.
At the start, G is false, I is false, K is false.
Given that K is false, and because V matches K, it follows that V is false.
Given that V is false, and because H matches not V, it follows that H is true.
Given that V is false, and because S matches not V, it follows that S is true.
Given that V is false, and because O is true only when both not G and V are true, it follows that O is false.
Given that G is false, and O is false, and because Y is true only when both not G and not O are true, it follows that Y is true.
In the end, Y is true.
(P remains indeterminate in this instance)

=== v_output ===
You are given a small propositional logic system.
Initially: O is True; V is False.
Rules:
- H = S.
- G = (O) AND (S).
- Y = (V) OR (not S).
- X = not V.
- P = (G) OR (not Y).
- S = (V) AND (not O).
Question: What is the truth value of P? Answer 'True' or 'False'.
Gold answer: False
Declared categories:
  initial:        ['O', 'V']
  useful(used):   ['G', 'S', 'Y']
  useless(unused):['H', 'X']
  indeterminate:  []
  output_var:     P
Observed minimal support path to output:
  minimal_support:['G', 'O', 'P', 'S', 'Y']

COT (gold):
I will reason forward from the initial facts until everything relevant is settled.
At the start, O is true, V is false.
Given that V is false, and because X matches not V, it follows that X is true.
Given that O is true, and because S is true only when both V and not O are true, it follows that S is false.
Given that S is false, and because H matches S, it follows that H is false.
Given that S is false, and because G is true only when both O and S are true, it follows that G is false.
Given that S is false, and because Y is true when at least one of V or not S is true, it follows that Y is true.
Given that G is false, and Y is true, and because P is true when at least one of G or not Y is true, it follows that P is || false.
In the end, P is false.
(P becomes determinate at char index 725, value=False)

