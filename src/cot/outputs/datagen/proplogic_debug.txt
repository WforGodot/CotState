=== i_initial ===
You are given a small propositional logic system.
Initially: P is False.
Rules:
- W = (not B) AND (not P).
- C = (not E) AND (P).
- E = (not W) AND (not B).
- B = not P.
Question: What is the truth value of C? Answer 'True' or 'False'.
Gold answer: False
Declared categories:
  initial:        ['P']
  useful(used):   ['B', 'E', 'W']
  useless(unused):[]
  indeterminate:  ['G', 'X']
  output_var:     C
Observed minimal support path to output:
  minimal_support:['B', 'C', 'E', 'P', 'W']

COT (gold):
I will reason forward from the initial facts until everything relevant is settled.
At the start, P is || false.
Right away, P is false.
Given that P is false, and because B matches not P, it follows that B is true.
Given that B is true, and P is false, and because W is true only when both not B and not P are true, it follows that W is false.
Given that B is true, and W is false, and because E is true only when both not W and not B are true, it follows that E is false.
Given that E is false, and P is false, and because C is true only when both not E and P are true, it follows that C is false.
In the end, C is false.
(P becomes determinate at char index 102, value=False)

=== iii_derived ===
You are given a small propositional logic system.
Initially: E is True.
Rules:
- U = not E.
- Y = not F.
- L = (P) AND (not F).
- F = not E.
- P = F.
Question: What is the truth value of L? Answer 'True' or 'False'.
Gold answer: False
Declared categories:
  initial:        ['E']
  useful(used):   ['F', 'P']
  useless(unused):['U', 'Y']
  indeterminate:  ['J', 'R']
  output_var:     L
Observed minimal support path to output:
  minimal_support:['E', 'F', 'L', 'P']

COT (gold):
I will reason forward from the initial facts until everything relevant is settled.
At the start, E is true.
Given that E is true, and because U matches not E, it follows that U is false.
Given that E is true, and because F matches not E, it follows that F is false.
Given that F is false, and because P matches F, it follows that P is || false.
Given that F is false, and because Y matches not F, it follows that Y is true.
Given that F is false, and P is false, and because L is true only when both P and not F are true, it follows that L is false.
In the end, L is false.
(P becomes determinate at char index 335, value=False)

=== v_output ===
You are given a small propositional logic system.
Initially: O is True; Q is True; U is True.
Rules:
- Z = (not U) AND (R).
- R = (O) AND (not U).
- P = (Z) AND (not U).
Question: What is the truth value of P? Answer 'True' or 'False'.
Gold answer: False
Declared categories:
  initial:        ['O', 'Q', 'U']
  useful(used):   ['R', 'Z']
  useless(unused):[]
  indeterminate:  []
  output_var:     P
Observed minimal support path to output:
  minimal_support:['O', 'P', 'R', 'U', 'Z']

COT (gold):
I will reason forward from the initial facts until everything relevant is settled.
At the start, O is true, Q is true, U is true.
Given that O is true, and U is true, and because R is true only when both O and not U are true, it follows that R is false.
Given that R is false, and U is true, and because Z is true only when both not U and R are true, it follows that Z is false.
Given that U is true, and Z is false, and because P is true only when both Z and not U are true, it follows that P is || false.
In the end, P is false.
(P becomes determinate at char index 497, value=False)

